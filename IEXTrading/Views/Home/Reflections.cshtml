
@{
    ViewData["Title"] = "Reflections";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Reflections</h2>

<hr />

<div>
    <p>
        This page serves as the source of our knowledge and what we did when determining our stocks and how to pick and order them accordingly.
        Below, you will find our methodology for stock selection, as well as individual team member self-reflections on the assignment itself.
        <br />
    </p>
    <h3>Methodology</h3>
    <hr />
    <p>- Price reversal detection tool</p>
    <p>- Common shares only (no preferred shares, ADRs etc.)</p>
    <p>- Market capitalization greater than or equal to $300m</p>
    <p>- Price drop within last 12 months</p>
    <p>- Price growth within last 5 days</p>
    <p>- Sorted by biggest price drop for the last 12 months (the higher the drop the higher potential reversal movement)</p>
    <p>- Pool of stocks to choose from is capped at 200 items to keep adequate performance</p>
    <br />
    <h3>Self-Reflection</h3>
    <hr />
    <p>
        Maxim Kazanov:
        <br />
        This assignment was in many ways a capstone project to date. I had to revisit previous topics all the way to LINQ and principles of OOP in order to effectively come up with a working prototype. On top of OOP basics, such "secondary" skills like manipulation with Git Hub repos and deploying to Azure were used again. Surprisingly deployment was a breath thanks to great efforts of MSFT engineers. Finally, it was a pleasure for me to revisit my core background (investments) in an unusual way.
    </p>
    <br />
    <p>
        Haritha Diraneyya:
        <br />
        In this assignment, it was relatively easy for me to understand how the different parts related at a very high level (i.e. the roles of models, views, and controllers and how they worked together—hence why it is named MVC). However to be honest, I was very much lost when diving into the details. Once I understood the program, however, I realized it was not really as complicated as I initially thought and that it had looked far more intimidating than it actually is, but the number of moving parts was overwhelming for me at first and it took me quite a while to get the meaning and connections in all that noise. This realization leads to the next one below.
        If someone asks me now as we are finishing the course to describe it for him/her in a nutshell, I'd say it is sort of a preparation (though at a basic level) for full-stack development, i.e. we're not interested in the basic skills as much as how to put that together with the tricky connecting "joints" which gives us a full functioning product. Now that's great in itself, but in my case, I just jumped into this boat without first developing the basic skills needed before moving into putting things together and make a coherent useful product. Other than that, it probably goes without saying that I am all for the idea of preparing us to be full-stack developers. That's the least we are expected to do as masters-level students.
    </p>
    <br />
    <p>
        Matthew Matos:
        <br />
        Overall, this Assignment was one of the most challenging ones yet. The task we had set out to complete was one that befuddled our group as we continued to try and add and modify pages. Modification of the page from an html/css/js standpoint was the simple part. Implementing the necessary C# code in order to accomplish what we need was by far the most diccicult part. I feel this could benefit with better direction in the future.
    </p>
</div>
